# This workflow needs to be run on demand
# It will search for all repositories containing the provided
# action and open pull requests if necessary.

name: Update workflow from org template

on: workflow_dispatch

jobs:
  workflows:
    runs-on: ubuntu-latest

    outputs:
      matrix: ${{ steps.workflows.outputs.matrix }}

    steps:
      - name: Search repositories using the ${{ github.event.inputs.name }} workflow
        id: workflows
        # This is a simple curl to fetch the list of repos containing a file and extracting the repo names
        run: |
          WORKFLOWS=$(echo '[{"file":"stylelint.config.js","workflow":"lint-stylelint.yml"},{"file":".eslintrc.js","workflow":"lint-eslint.yml"},{"file":".php-cs-fixer.dist.php","workflow":"lint-php-cs.yml"},{"file":".php_cs.dist","workflow":"lint-php-cs.yml"},{"file":"composer.json","search":"composer run lint","workflow":"lint-php.yml"}]' | jq -c)
          echo "::set-output name=matrix::$WORKFLOWS"

  repositories:
    runs-on: ubuntu-latest
    needs: workflows

    outputs:
      matrix: ${{ steps.search-repos.outputs.matrix }}
      workflow: ${{ matrix.workflows }}

    strategy:
      matrix:
        fail-fast: false
        php-versions: ${{ fromJSON(needs.workflows.outputs.workflows) }}

    steps:
      - name: Search repositories using the ${{ github.event.inputs.name }} workflow
        id: search-repos
        # This is a simple curl to fetch the list of repos containing a file and extracting the repo names
        run: |
          REPOS=$(curl -H "Accept: application/vnd.github.v3+json" "https://api.github.com/search/code?q=org%3Anextcloud%20${{ matrix.workflows.search }}%20filename%3A${{ matrix.workflows.file }}&per_page=100" | jq -c '.items | map(.repository.name) | unique')
          echo "::set-output name=matrix::$REPOS"

  dispatch:
    runs-on: ubuntu-latest
    needs: [workflows, repositories]

    strategy:
      fail-fast: false
      matrix:
        repositories: ${{ fromJSON(needs.repositories.outputs.matrix) }}
        
    steps:
      - run: |
          echo ${{ fromJSON(needs.repositories.outputs.workflows) }}
          echo ${{ fromJSON(needs.repositories.outputs.matrix) }}
